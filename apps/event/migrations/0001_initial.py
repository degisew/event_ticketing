# Generated by Django 5.1.5 on 2025-03-27 23:05

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('name', models.CharField(max_length=255, verbose_name='Event Name')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Event Code')),
                ('ticket_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Ticket Prcie')),
                ('description', models.TextField(verbose_name='Event Description')),
                ('start_date', models.DateTimeField(help_text='Format: YYYY-MM-DD HH:MM:SS', verbose_name='Start Date')),
                ('end_date', models.DateTimeField(help_text='Format: YYYY-MM-DD HH:MM:SS', verbose_name='End Date')),
                ('location', models.CharField(max_length=255, verbose_name='Location')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('capacity', models.PositiveIntegerField(default=0, verbose_name='Capacity')),
                ('available_seats', models.PositiveIntegerField(default=0, verbose_name='Available Seats')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='events', to=settings.AUTH_USER_MODEL, verbose_name='Event Organizer')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'db_table': 'events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='Code')),
                ('reserved_date', models.DateTimeField(auto_now_add=True, verbose_name='Reserved Date')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='event.event')),
                ('payment_status', models.ForeignKey(limit_choices_to={'type': 'reservation_payment_status'}, max_length=10, on_delete=django.db.models.deletion.RESTRICT, related_name='+', to='core.datalookup', verbose_name='Payment Status')),
                ('status', models.ForeignKey(limit_choices_to={'type': 'reservation_status'}, on_delete=django.db.models.deletion.RESTRICT, related_name='+', to='core.datalookup', verbose_name='Status')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reservation',
                'verbose_name_plural': 'Reservations',
                'db_table': 'reservations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('payment_date', models.DateTimeField(auto_now_add=True, help_text='Format: YYYY-MM-DD HH:MM:SS', verbose_name='Payment Date')),
                ('payment_method', models.CharField(max_length=50, verbose_name='Payment Method')),
                ('reservation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='event.reservation', verbose_name='Reservation')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('ticket_number', models.CharField(max_length=255, unique=True, verbose_name='Ticket Number')),
                ('seat_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Seat Number')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Unit Price')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='event.event', verbose_name='Event')),
                ('status', models.ForeignKey(limit_choices_to={'type': 'ticket_status'}, on_delete=django.db.models.deletion.RESTRICT, related_name='+', to='core.datalookup', verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
                'db_table': 'tickets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReservationItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation_items', to='event.reservation', verbose_name='Reservation')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation_items', to='event.ticket', verbose_name='Ticket')),
            ],
            options={
                'verbose_name': 'Reservation Item',
                'verbose_name_plural': 'Reservation Items',
                'db_table': 'reservation_items',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketCategoryPrice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('category', models.ForeignKey(limit_choices_to={'type': 'ticket_category_type'}, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.datalookup', verbose_name='Ticket Category')),
            ],
            options={
                'verbose_name': 'Ticket Category Price',
                'verbose_name_plural': 'Ticket Category Prices',
                'db_table': 'ticket_category_price',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.UniqueConstraint(fields=('name', 'start_date'), name='unique_event_start'),
        ),
        migrations.AddConstraint(
            model_name='reservationitem',
            constraint=models.UniqueConstraint(fields=('reservation', 'ticket'), name='unique_ticket_per_reservation'),
        ),
    ]
